package edu.csula.rubrics;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Properties;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import io.jsonwebtoken.Claims;
import io.jsonwebtoken.ExpiredJwtException;
import io.jsonwebtoken.Jws;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.MalformedJwtException;
import io.jsonwebtoken.SignatureException;
import io.jsonwebtoken.UnsupportedJwtException;

@Controller
@RequestMapping("/canvas")
public class CanvasController {

	@GetMapping("/hello")
	public String hello(Model model,
			@RequestParam(value = "name", required = false, defaultValue = "World") String name) {
		model.addAttribute("name", name);
		return "hello";
	}

	@GetMapping("/oauth_callback")
	public String getCode(Model model, @RequestParam(value = "code", required = false, defaultValue = "") String code) {
		
		// get developer key id and secret
		String dkID = "";
		String dkKey = "";
		try (InputStream input = new FileInputStream("src/main/resources/developer_key.properties")) {
			Properties prop = new Properties();
			prop.load(input);
			dkID = prop.getProperty("id");
			dkKey = prop.getProperty("key");
		} catch (IOException ex) {
			ex.printStackTrace();
		}
		if (dkID.length() == 0 || dkKey.length() == 0)
			return "";

		// call Canvas POST API to get Token
		String token = "";
//		try {
//			URL url = new URL("https://calstatela.instructure.com:443/login/oauth2/token");
//			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
//
//			conn.setRequestMethod("POST");
//			conn.setRequestProperty("Content-Type", "application/json");
//			conn.setDoOutput(true);
//
//			String jsonInputString = "{ \"grant_type\": \"authorization_code\"," + " \"client_id\":" + dkID + ","
//					+ " \"client_secret\": \"" + dkKey + "\","
//					+ " \"redirect_uri\": \"https://alice.cysun.org/alice-rubrics/canvas/oauth_callback\","
//					+ " \"code\": \"" + code + "\"" + " } ";
//
//			OutputStream os = conn.getOutputStream();
//			os.write(jsonInputString.getBytes());
//			os.flush();
//
//			// if failed, (like some parameter value is invalid)
//			if (conn.getResponseCode() != HttpURLConnection.HTTP_CREATED) {
//				throw new RuntimeException("Failed : HTTP error code : " + conn.getResponseCode());
//			}
//
//			BufferedReader br = new BufferedReader(new InputStreamReader((conn.getInputStream())));
//
//			// in the future, we should edit this one, found "access_token" and assign the
//			// value into token
//			String output;
//			while ((output = br.readLine()) != null) {
//				System.out.println(output);
//			}
//
//		} catch (Exception e) {
//			e.printStackTrace();
//		}
		model.addAttribute("token", token+code);
		return "oauth_callback";
	}

	// return userid if already login
	@GetMapping("/loginStatus")
	public String loginStatus(Model model, @RequestParam(value = "token", defaultValue = "") String jwt) {
		// jwt is the token generated by RubricService
		System.out.println("get token: " + jwt);

		// call canvas API.
		if (jwt.length() == 0)
			return "nothing";

		try {
			Jws<Claims> claims = Jwts.parser().setSigningKey("secret".getBytes("UTF-8")).parseClaimsJws(jwt);
			String username = claims.getBody().get("username").toString();
			return claims.getBody().getId();
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}

		return "nothing";

	}

}